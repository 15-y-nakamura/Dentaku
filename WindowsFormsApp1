using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace WindowsFormsApp1
{
    public partial class Form1 : Form
    {
        // 画面に表示されている数字を文字列で保持します（例："123"）
        private string displayedNumber = "0";

        // 足し算の途中結果を整数で保持します
        private int firstNumber = 0;

        // ＋ボタンが押されたかどうかを判断するフラグです
        private bool isPlusPressed = false;

        public Form1()
        {
            InitializeComponent();
            labelResult.Text = displayedNumber;

            // 数字ボタンにクリックイベントをまとめて登録
            button0.Click += NumberButton_Click;
            button1.Click += NumberButton_Click;
            button2.Click += NumberButton_Click;
            button3.Click += NumberButton_Click;
            button4.Click += NumberButton_Click;
            button5.Click += NumberButton_Click;
            button6.Click += NumberButton_Click;
            button7.Click += NumberButton_Click;
            button8.Click += NumberButton_Click;
            button9.Click += NumberButton_Click;

            // クリア、＋、＝ボタンのクリックイベント登録
            buttonClear.Click += ClearButton_Click;
            buttonPlus.Click += PlusButton_Click;
            buttonIcol.Click += buttonEqual_Click;
        }

        // 数字ボタンが押されたときの処理
        private void NumberButton_Click(object sender, EventArgs e)
        {
            // 押されたボタンのテキスト（数字）を取得します
            string number = ((Button)sender).Text;

            // 表示中の数字が "0" の場合は、その数字に置き換えます
            // それ以外は後ろに数字を追加していきます
            if (displayedNumber == "0")
            {
                // 最初の数字が "0" の場合は、"0"のままでは表示せず、
                // 押された数字に置き換えます
                displayedNumber = number;
            }
            else
            {
                // すでに数字が表示されている場合は、
                // 押された数字を後ろに追加します
                displayedNumber += number;
            }

            // 表示ラベルに反映します
            labelResult.Text = displayedNumber;
        }

        // クリアボタンが押されたときの処理
        private void ClearButton_Click(object sender, EventArgs e)
        {
            // 表示数字を "0" にリセット
            displayedNumber = "0";

            // 足し算の途中結果をリセット
            firstNumber = 0;

            // ＋ボタン押下フラグもリセット
            isPlusPressed = false;

            // 表示更新
            labelResult.Text = displayedNumber;
        }

        // ＋ボタンが押されたときの処理
        private void PlusButton_Click(object sender, EventArgs e)
        {
            // 今表示されている数字（文字列）を計算できるように整数変換します
            // 例："8" → 8 に変換
            int currentNumber = int.Parse(displayedNumber);

            if (isPlusPressed)
            {
                // すでに＋が押されている場合は、
                // 前回までの合計に今回の数字を足します
                firstNumber += currentNumber;
            }
            else
            {
                // 最初に＋が押された場合は、
                // 今の数字を合計として保存します
                firstNumber = currentNumber;
                isPlusPressed = true;
            }

            // 次の数字入力のために、表示中の数字を空文字にしてリセットします
            displayedNumber = "";

            // 合計を画面に表示します（例：16）
            labelResult.Text = firstNumber.ToString();

        }

        // ＝ボタンが押されたときの処理
        private void buttonEqual_Click(object sender, EventArgs e)
        {
            // もし＋ボタンが押された状態で＝ボタンが押された場合のみ計算を行います
            if (isPlusPressed == true)
            {
                // 現在の表示数字を整数に変換します
                int secondNumber = int.Parse(displayedNumber);

                // 合計と今の数字を足して計算結果を求めます
                int result = firstNumber + secondNumber;

                // 結果を文字列に変換して表示用変数にセットし、画面表示も更新します
                displayedNumber = result.ToString();
                labelResult.Text = displayedNumber;

                // 計算終了のため、＋ボタン押下フラグをリセットします
                isPlusPressed = false;
            }
        }
    }
}
